@model BusinessObject.PartBO

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/Content/kendo/kendo.common.min.css" />
<link rel="stylesheet" href="~/Content/kendo/kendo.default.min.css" />
<link rel="stylesheet" href="~/Content/kendo/kendo.default.mobile.min.css" />
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/kendo/kendo.all.min.js"></script>
<script src="~/Scripts/kendo/kendo.aspnetmvc.min.js"></script>

<script src="~/Scripts/commonUtil/commonUtil.js"></script>

<style type="text/css">
    .k-textboxsmall {
        height: 150px !important;
    }
    .btnplus {
        padding: 0px 2px;
    }
    .container {
        width: 100%;
        height: auto;
        background-color: #f8f9f8;
        margin-right: auto;
        margin-left: auto;
        color: #039;
    }

    .form-group {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

        .form-group label {
            width: 200px
        }

    .form-group100 label {
        width: 100px
    }

    body {
        font-family: Verdana, Geneva, sans-serif;
        font-size: 12px;
        font-size: 12px;
    }


    .outer {
        background-color: none;
    }

        .outer > * {
            display: inline-block;
            background-color: none;
        }

    .one {
        width: 15%;
        height: 80px;
        vertical-align: top;
        font-style: normal;
    }

    .two {
        width: 60%;
        height: 80px;
        vertical-align: top;
        font-style: normal;
    }

    .three {
        width: 22%;
        height: 80px;
        vertical-align: top;
        font-style: normal;
    }
</style>

<body>

    <div>
        @using (Html.BeginForm("PartAdd", "Part", FormMethod.Post))
        {

            @Html.AntiForgeryToken()

        <div class="container">
            <div id="divmain" class="outer">
                <div class="one">
                    <div>
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-body" style="text-align:center;">
                                    <img src=@ViewBag.Photo id="displayPhoto" class="imageDisplay img-thumbnail" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            @(Html.Kendo().Upload()
                                .Name("Photo")
                                .HtmlAttributes(new { aria_label = "files", @style = "width:300px;" })
                                .Validation(validation =>
                                {
                                    validation.AllowedExtensions(new string[] { ".jpg", ".jpeg", ".png", ".bmp", ".gif" });
                                    validation.MaxFileSize(500000);
                                })
                                .Messages(m => m.Select("Select Image"))
                                .Multiple(false)
                                 .Events(events => events
                                 .Select("onSelect")
                                 .Remove("onRemove")
                                 )
                                    )
                        </div>
                        <div class="col-md-12" style="margin-top:5px;">
                            <button type="submit" class="btn btn-success w-100">Save</button>
                        </div>

                    </div>

                    <div>
                        <div class="form-group">
                            <label for="exampleFormControlFile1">Height</label>
                            @(Html.Kendo().NumericTextBoxFor(model => model.Dim_H)

                            .Name("Dim_H")
                            .HtmlAttributes(new { placeholder = "Height", required = "required", validationmessage = "Enter Height" })
                                )
                        </div>
                        <div class="form-group">
                            <label for="exampleFormControlFile1">Weight</label>
                            @(Html.Kendo().NumericTextBoxFor(model => model.Dim_W)
                            .Name("Dim_W")
                            .HtmlAttributes(new { placeholder = "Weight", required = "required", validationmessage = "Enter Weight" })
                                )
                        </div>

                        <div class="form-group">
                            <label for="exampleFormControlFile1">Length</label>
                            @(Html.Kendo().NumericTextBoxFor(model => model.Dim_L)
                            .Name("Dim_L")
                            .HtmlAttributes(new { placeholder = "Length", required = "required", validationmessage = "Enter Length" })
                                )
                        </div>

                        <div class="form-group">
                            <label for="exampleFormControlFile1">Gross Weight</label>
                            @(Html.Kendo().TextAreaFor(model => model.GrossWeight)
                            .Name("GrossWeight")
                            .HtmlAttributes(new { placeholder = "Gross Weight", required = "required", validationmessage = "Enter Gross Weight" })
                                )
                        </div>

                        <div class="form-group">
                            <label for="exampleFormControlFile1">Publish</label>
                            @(Html.Kendo().CheckBoxFor(model => model.Publish)
                            .Name("Publish")
                            .HtmlAttributes(new { placeholder = "Publish", validationmessage = "Enter Publish" })
                                )
                        </div>

                    </div>

                </div>
                <div class="two">
                    <div class="form-group d-flex align-items-center">
                        <label for="exampleFormControlFile1">PartNo # *</label>
                        @(Html.Kendo().TextBoxFor(model => model.PartNo)
                        .Name("PartNo")
                        .HtmlAttributes(new { placeholder = "Part No", required = "required", validationmessage = "Enter Part No" })
                                )
                    </div>

                    <div class="form-group d-flex align-items-center">
                        <label for="exampleFormControlFile1">Alternate P/N</label>
                        @(Html.Kendo().TextBox()
                                 .Name("txtalternetpartNo")

                                 .HtmlAttributes(new { placeholder = "Alternet Part No", required = "required", @class = "AlternetDefaultValue", validationmessage = "Enter Alternet Part No" })
                                )

                        <div class="form-group d-flex align-items-center">
                            <br /><input type="button" value="Add" class="btn-success" onclick="AddAlternetPartNo()" />
                            <br /><div id="divAlternetPartNo"></div>
                        </div>
                    </div>

                    <div class="form-group">

                        <label for="exampleFormControlFile1">Type</label>
                        @(Html.Kendo().DropDownList().Name("ddlPartTypeID")
                            .HtmlAttributes(new { style = "width:100%" })
                            .OptionLabel("Select Type")

                            .BindTo(new SelectList((List<BusinessObject.PartTypeBO>)ViewBag.lstPartType, "PartTypeID", "PartTypeDescription"))

                                )

                    </div>

                    <div class="form-group">

                        <label for="exampleFormControlFile1">Sub Type</label>


                        @Html.Kendo().DropDownList().Name("ddlSubType").OptionLabel("--Select--").DataTextField("SubTypeDescription").DataValueField("SubTypeID").DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetAllSubPartType", "Part").Data("FilterSubType");

                            }).ServerFiltering(true);
                        }).Enable(false).AutoBind(false).CascadeFrom("ddlPartTypeID")


                    </div>
                    <div class="form-group">
                        <label for="exampleFormControlFile1">Part Desc</label>
                        @(Html.Kendo().TextBoxFor(model => model.PartDescription)
                        .Name("PartDescription")
                        .HtmlAttributes(new { placeholder = "Part Description", required = "required", validationmessage = "Enter Part Description" })
                                )
                    </div>

                    <div class="form-group">
                        <label for="exampleFormControlFile1">Part Detail Desc</label>
                        @(Html.Kendo().TextBoxFor(model => model.PartDetailDescription)
                        .Name("PartDetailDescription")
                        .HtmlAttributes(new { placeholder = "Part Detail Description", required = "required", validationmessage = "Enter Part Detail Description" })
                                )
                    </div>

                    Condition Price
                    <div id="ConditionPriceGrid" style="width: 100%;height:212px"></div>

                    Supplier
                    <a style="min-width: 30px;" id="cmdAddSupplier" href="#" onclick="launchSupplierWindow()" class="btnplus btn btn-outline-primary">
                        +<i class="la la-plus"></i>
                    </a>
                    <div id="partSupplierBody">

                        <div id="SupplierWindow"></div>
                    </div>



                    <div id="SupplierTransGrid" style="height:190px"></div>

                </div>
                <div class="three">
                    Compatibility
                    <a style="min-width: 30px;" id="cmdAddComp" href="#" onclick="launchCompWindow()" class="btnplus btn btn-outline-primary">
                        +<i class="la la-plus"></i>
                    </a>
                    <div id="partComppageBody">
                        <div id="treeview" style="padding-bottom: 20pt;"></div>
                        <div id="compWindow"></div>
                    </div>

                    <div id="CompabilityTransGrid" style="width: 80%;height:300px;display:none"></div>


                    <div class="form-group">
                        <label for="exampleFormControlFile1">Online Message</label>
                        @(Html.Kendo().TextBoxFor(model => model.OnlineMsg)
                            .Name("OnlineMsg")
                            .HtmlAttributes(new { placeholder = "Online Message", validationmessage = "Enter Online Message" ,@class= "k-textboxsmall" })
                                )
                    </div>
                    <div class="form-group">
                        <label for="exampleFormControlFile1">Internal Note</label>
                        @(Html.Kendo().TextBoxFor(model => model.Note)
                            .Name("Note")
                            .HtmlAttributes(new { placeholder = "Note", validationmessage = "Enter Note", @class = "k-textboxsmall" })
                                )
                    </div>

                </div>
            </div>
            <div style="padding-top:530pt">
                Related Parts
                <div id="RelatedPartTransGrid" style="width: 100%;height:300px"></div>

                Logistick Parts
                <div id="LogistickTransGrid" style="width: 100%;height:300px"></div>

            </div>
            <table class="table">
                <tr>
                    <td style="width:20%;vertical-align:top">

                        
                    </td>
                    <td style="width: 40%; vertical-align: top">




                       




                       

                        



                        @*@(Html.Kendo().Button()
        .Name("primaryTextButton")
        .ThemeColor(ThemeColor.Primary)
        .Content("Primary Button"))*@
                        <input type="submit" value="Save" CssClass="btn btn-primary btn-sm" />

                    </td>
                    <td style="width: 40%; vertical-align: top">

                        @*<div id="gridc" style="width: 80%;height:300px"></div>*@

                    </td>
                </tr>
            </table>
        </div>

            <script>

                    function FilterSubType() {
                        return {
                            PartTypeID: $("#ddlPartTypeID").val()
                        };
                    }

                    /* image preview*/



                function onRemove(e) {

                        $("#displayPhoto").attr("src", "/images/profile_default.png");
                    }

                    function onSelect(e) {
                        var file = e.files[0].rawFile;
                        var ext = e.files[0].extension.toLowerCase();

                        if (ext == ".jpg" || ext == ".jpeg" || ext == ".png" || ext == ".bmp" || ext == ".gif") {
                            var reader = new FileReader();
                            reader.onloadend = function () {
                                $("#displayPhoto").attr("src", this.result); //img id where the photo is to be displayed
                            };

                            reader.readAsDataURL(file); //Read the selected photo and display in UI
                        }
                        else { //If file extension does not belong to photo display a default image
                            $("#displayPhoto").attr("src", "/images/profile_default.png");
                        }
                    }



                    /* Compatibilitygrid start */

                    var CompatibilitygridDS = @Html.Raw(Json.Encode((IEnumerable<BusinessObject.CompatibilityTrans>)ViewBag.lstCompatibilityPart));



                    var dataSource = new kendo.data.DataSource({
                        schema: {
                            model: {
                                id: "PartID",
                                fields: {
                                    ModelManufacturerId: { type: "number" },
                                    PartLinkID: { type: "number" },
                                    PartID: { type: "number" },
                                    ProductCategoryDescription: { type: "string" },
                                    VendorName: { type: "string" },
                                    ModelNo: { type: "string" },
                                    Active: { type: "boolean" }

                                }
                            }
                        },
                        transport: {
                            read: function (options) { options.success(CompatibilitygridDS); },
                            update: function(options) { options.success(); },
                            create: function(options) {
                                CompatibilitygridDS.push(options.data);
                                options.success(options.data);
                            },
                            destroy: function(options) {
                                CompatibilitygridDS.splice(options.data.RowID - 1, 1);
                                options.success(options.data);
                            }
                        },
                        requestEnd: function (e) {
                            if (e.type == "create" || e.type == "update" || e.type == "delete") {
                                this.read();
                            }
                            else if (e.type == "read") {
                            }
                        },
                        error: function (obj) {
                            alert("Status: " + obj.status + "; Error Message: " + obj.errorThrown);
                        }
                    });

                $("#CompabilityTransGrid").kendoGrid({
                        dataSource: dataSource,

                        columns: [

                            {
                                field: "PartLinkID",
                                title: "PartLinkID",
                                hidden: true
                            },
                            {
                                field: "ModelManufacturerId",
                                title: "ModelManufacturerId",
                                hidden: true
                            },

                            {
                                field: "Active",
                                title: "Status",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },
                                template: '<input type="checkbox" #= Active ? "checked=checked" : "" # class="SelFlagChkBox" ></input>',
                                width: 30
                            },

                        {
                            field: "ProductCategoryDescription",
                            title: "Product Category Description",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },

                        },
                        {
                            field: "VendorName",
                            title: "VendorName",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },

                        },
                        {
                            field: "ModelNo",
                            title: "ModelNo",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },

                        },
                        ],
                        editable: {
                            mode: "inline",
                            confirmation: "Are you sure you want to Delete the Part Type?",
                            cancelDelete: "No",
                            confirmDelete: "Yes"
                        },
                        height: 300,
                        groupable: false,
                        sortable: true,
                        pageable: false,
                        scrollable: true
                    });







                    /* Compatibilitygrid END */



                    /* SupplierTransgrid start */

                    var SupplierTransgridDS = @Html.Raw(Json.Encode(ViewBag.lstSupplierTrans));

                    var dataSource = new kendo.data.DataSource({
                        schema: {
                            model: {
                                id: "PartID",
                                fields: {
                                    PartSuppierID: { type: "number", editable: false},
                                    VendorID: { type: "number", editable: false},
                                    VendorPartNo: { type: "string", editable: false},
                                    VendorPartDescription: { type: "string", editable: false},
                                    Vendorprice: { type: "number" },
                                    Ourprice: { type: "number" },
                                    Priority: { type: "number" },
                                    Note: { type: "string" },
                                    SupplierName: { type: "string", editable: false},
                                    SOURCE: { type: "string", editable: false }

                                }
                            }
                        },
                        transport: {
                            read: function (options) { options.success(SupplierTransgridDS); },
                            update: function(options) { options.success(); },
                            create: function(options) {
                                SupplierTransgridDS.push(options.data);
                                options.success(options.data);
                            },
                            destroy: function(options) {
                                SupplierTransgridDS.splice(options.data.RowID - 1, 1);
                                options.success(options.data);
                            }
                        },
                        requestEnd: function (e) {
                            if (e.type == "create" || e.type == "update" || e.type == "delete") {
                                this.read();
                            }
                            else if (e.type == "read") {
                            }
                        },
                        error: function (obj) {
                            alert("Status: " + obj.status + "; Error Message: " + obj.errorThrown);
                        }
                    });

                $("#SupplierTransGrid").kendoGrid({
                        dataSource: dataSource,


                        columns: [
                            {
                               field: "VendorID",
                               name: "VendorID",
                               hidden:true
                            },
                            {
                                field: "PartSuppierID",
                                name: "PartSuppierID",
                                hidden: true
                            },
                            {
                            field: "SupplierName",
                            title: "Supplier Name",
                            name: "Supplier Name",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },

                            },
                            {
                                field: "VendorPartNo",
                                title: "VendorPartNo",
                                name: "VendorPartNo",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },

                            },
                            {
                                field: "VendorPartDescription",
                                title: "VendorPartDescription",
                                name: "VendorPartDescription",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },

                            },
                            {
                                field: "Vendorprice",
                                title: "Vendorprice",
                                name: "Vendorprice",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },
                                editor: function (container) {
                                    var input = $('<input id="Vendorprice" name="Vendorprice" class="k-input numbers">');
                                    input.appendTo(container);
                                    input.kendoNumericTextBox({
                                        format: "{0:n0}",
                                        decimals: 0,
                                        min: 0,
                                        max: 100,
                                        spinners: false
                                    });

                                },
                                width: 50
                            },
                            {
                                field: "Ourprice",
                                title: "Ourprice",
                                name: "Ourprice",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },
                                editor: function (container) {
                                    var input = $('<input id="Ourprice" name="Ourprice" class="k-input numbers">');
                                    input.appendTo(container);
                                    input.kendoNumericTextBox({
                                        format: "{0:n0}",
                                        decimals: 0,
                                        min: 0,
                                        max: 100,
                                        spinners: false
                                    });

                                },
                                width: 50
                            },
                            {
                                field: "Priority",
                                title: "Priority",
                                name: "Priority",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },
                                editor: function (container) {
                                    var input = $('<input id="Priority" name="Priority" class="k-input numbers">');
                                    input.appendTo(container);
                                    input.kendoNumericTextBox({

                                        decimals: 0,
                                        min: 0,
                                        max: 100,
                                        spinners: false
                                    });

                                },
                                width: 50
                            },
                            {
                                field: "Note",
                                title: "Note",
                                name: "Note",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },
                                editor: function (container) {
                                    var input = $('<input id="Note" name="Note" class="k-input numbers">');
                                    input.appendTo(container);
                                    input.kendoTextBox({

                                    });

                                },
                                width: 50
                            },
                            {
                                field: "SOURCE",
                                title: "SOURCE",
                                name: "SOURCE",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },

                            },
                        ],
                       editable: true,
                        height: 400,
                        groupable: false,
                        sortable: true,
                        pageable: false,
                        scrollable: true
                    });

                    /* SupplierTransgrid END */


                    /* ConditionPriceTrans start */

                    var ConditionPriceTransgridDS = @Html.Raw(Json.Encode(ViewBag.lstConditionPriceTrans));

                    var dataSource = new kendo.data.DataSource({
                        schema: {
                            model: {
                                id: "PartID",
                                fields: {
                                    PartConditionPriceID: { type: "number", editable: false},
                                    PartID: { type: "number", editable: false},
                                    ConditionID: { type: "number", editable: false},
                                    ConditionDescription: { type: "string",editable:false},
                                    Stockable: { type: "boolean", editable: false},
                                    Retunable: { type: "boolean", editable: false},
                                    PriceQty: { type: "number" },
                                    Price: { type: "number" },
                                    Location: { type: "string", editable: false},
                                    lastupdatedDate: { type: "date", editable: false}

                                }
                            }
                        },
                        transport: {
                            read: function (options) { options.success(ConditionPriceTransgridDS); },
                            update: function(options) { options.success(); },
                            create: function(options) {
                                ConditionPriceTransgridDS.push(options.data);
                                options.success(options.data);
                            },
                            destroy: function(options) {
                                ConditionPriceTransgridDS.splice(options.data.RowID - 1, 1);
                                options.success(options.data);
                            }
                        },
                        requestEnd: function (e) {
                            if (e.type == "create" || e.type == "update" || e.type == "delete") {
                                this.read();
                            }
                            else if (e.type == "read") {
                            }
                        },
                        error: function (obj) {
                            alert("Status: " + obj.status + "; Error Message: " + obj.errorThrown);
                        }
                    });

                $("#ConditionPriceGrid").kendoGrid({
                        dataSource: dataSource,

                        columns: [
                               {
                                 field: "PartConditionPriceID",
                                 hidden: true,
                                 width: 10
                             },
                               {
                                   field: "PartID",
                                   hidden: true,
                                   width: 10
                               },
                               {
                                   field: "ConditionID",
                                   hidden: true,
                                   width: 10
                               },
                               {
                               field: "ConditionDescription",
                               title: "Desc",
                               headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                               attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= ConditionDescription #" },
                               width: 50
                           },
                               {
                                field: "Stockable",
                                title: "Stockable",

                                attributes: { style: "font-size: 12px;" },
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },

                                template: '<input type="checkbox" #= Stockable ? "checked=checked" : "" # ></input>',
                                width: 30
                            },

                               {
                                field: "Retunable",
                                title: "Retunable",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },
                                template: '<input type="checkbox" #= Retunable ? "checked=checked" : "" #  ></input>',
                                width: 30

                            },

                               {
                                field: "PriceQty",
                                title: "PriceQty",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },

                                editor: function (container) {
                                    var input = $('<input id="PriceQty" name="PriceQty" class="k-input numbers">');
                                    input.appendTo(container);
                                    input.kendoNumericTextBox({
                                        format: "{0:n0}",
                                        decimals: 0,
                                        min: 0,
                                        max: 100,
                                        spinners: false
                                    });

                                },
                                width: 40
                            },
                               {
                                field: "Price",
                                title: "Price",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px; text-align:right" },

                                format: "{0:c2}",
                                editor: function (container) {
                                    var input = $('<input id="PriceQty" name="Price" class="k-input numbers" style="text-align:right;">');
                                    input.appendTo(container);
                                    input.kendoNumericTextBox({
                                        format: "{0:c2}",

                                        min: 0,

                                        spinners: false
                                    });

                                },
                                width: 40
                            },

                               {
                                field: "Location",
                                title: "Location",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },
                                width: 20
                            },
                               {
                                field: "lastupdatedDate",
                                title: "lastupdatedDate",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },
                                   template: function (dataItem) {
                                      // debugger;
                                    if (dataItem.lastupdatedDate != null) {
                                        return kendo.toString(kendo.parseDate(dataItem.lastupdatedDate, 'yyyy-MM-dd'), 'MM/dd/yyyy');
                                    }
                                    else {
                                        return "";
                                    }
                                },

                                width: 50

                            },




                        ],
                        editable:true,
                        height: 300,
                        groupable: false,
                        sortable: true,
                        pageable: false,
                        scrollable: true
                    });

                    /* ConditionPriceTrans END */


                     /* Related part trans start */

                    var RelatedPartTransgridDS = @Html.Raw(Json.Encode(ViewBag.lstRelatedPartTrans));

                    var dataSource = new kendo.data.DataSource({
                        schema: {
                            model: {
                                id: "PartID",
                                fields: {
                                    PartId_Related: { type: "number" },
                                    PartDescription: { type: "string" },
                                    PartTypeDescription: { type: "string" },
                                    SubTypeDescription: { type: "string"}
                                }
                            }
                        },
                        transport: {
                            read: function (options) { options.success(RelatedPartTransgridDS); },
                            update: function(options) { options.success(); },
                            create: function(options) {
                                RelatedPartTransgridDS.push(options.data);
                                options.success(options.data);
                            },
                            destroy: function(options) {
                                RelatedPartTransgridDS.splice(options.data.RowID - 1, 1);
                                options.success(options.data);
                            }
                        },
                        requestEnd: function (e) {
                            if (e.type == "create" || e.type == "update" || e.type == "delete") {
                                this.read();
                            }
                            else if (e.type == "read") {
                            }
                        },
                        error: function (obj) {
                            alert("Status: " + obj.status + "; Error Message: " + obj.errorThrown);
                        }
                    });
                $("#RelatedPartTransGrid").kendoGrid({
                        dataSource: dataSource,
                        columns: [
                               {
                                field: "PartId_Related",
                                title: "PartId_Related",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= PartId_Related #" },
                                hidden: true,
                                width: 10
                               },
                               {
                                   field: "PartDescription",
                                   title: "PartDescription",
                                   headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                   attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= PartDescription #" },
                                   width: 40
                               },
                               {
                                   field: "PartTypeDescription",
                                   title: "PartTypeDescription",
                                   headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                   attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= PartTypeDescription #" },
                                   width: 40
                               },

                        ],
                        editable:false,
                        height: 300,
                        groupable: false,
                        sortable: true,
                        pageable: false,
                        scrollable: true
                    });

                /* Related part trans END */

                  /* Logisticks trans start */


                    var LogistickTransgridDS = @Html.Raw(Json.Encode(ViewBag.lstlogisticksTrans));

                    var dataSource = new kendo.data.DataSource({
                        schema: {
                            model: {
                                id: "PartID",
                                fields: {
                                    chk: { type: "boolean", editable: false},
                                    PartLogisticsID: { type: "number", editable: false },
                                    ConditionID: { type: "number" ,editable:false},
                                    ConditionDescription: { type: "string", editable: false },
                                    SafetyStock: { type: "boolean" },
                                    MinBuy: { type: "string" },
                                    Location1: { type: "string"},
                                    Location2: { type: "string" },
                                    Stockable: { type: "boolean" },
                                    Retunable: { type: "boolean" }
                                }
                            }
                        },
                        transport: {
                            read: function (options) { options.success(LogistickTransgridDS); },
                            update: function(options) { options.success(); },
                            create: function(options) {
                                LogistickTransgridDS.push(options.data);
                                options.success(options.data);
                            },
                            destroy: function(options) {
                                LogistickTransgridDS.splice(options.data.RowID - 1, 1);
                                options.success(options.data);
                            }
                        },
                        requestEnd: function (e) {
                            if (e.type == "create" || e.type == "update" || e.type == "delete") {
                                this.read();
                            }
                            else if (e.type == "read") {
                            }
                        },
                        error: function (obj) {
                            alert("Status: " + obj.status + "; Error Message: " + obj.errorThrown);
                        }
                    });
                $("#LogistickTransGrid").kendoGrid({
                        dataSource: dataSource,
                    columns: [


                        {
                            field: "ConditionID",
                            title: "ConditionID",
                           hidden:true
                        },
                        {
                                   field: "ConditionDescription",
                                   title: "ConditionDescription",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                   attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= ConditionDescription #" },
                                width: 50
                        },
                        {
                            field: "Stockable",
                            title: "Stockable",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },
                            template: '<input type="checkbox" #= Stockable ? "checked=checked" : "" # class="SelFlagChkBox" ></input>',
                            width: 30
                        },
                        {
                            field: "Retunable",
                            title: "Retunable",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },
                            template: '<input type="checkbox" #= Retunable ? "checked=checked" : "" # class="SelFlagChkBox" ></input>',
                            width: 30

                        },
                        {
                            field: "SafetyStock",
                            title: "SafetyStock",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },
                            template: '<input type="checkbox" #= Stockable ? "checked=checked" : "" # class="SelFlagChkBox" ></input>',
                            width: 30
                        },
                        {
                            field: "MinBuy",
                            title: "MinBuy",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= MinBuy #" },

                            editor: function (container) {
                                var input = $('<input id="MinBuy" name="MinBuy" class="k-input numbers">');
                                input.appendTo(container);
                                input.kendoNumericTextBox({
                                    format: "{0:n0}",
                                    number: 0,
                                    min: 0,
                                    max: 100,
                                    spinners: false
                                });

                            },
                            width: 50
                        },
                        {
                            field: "Location1",
                            title: "Location1",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= Location1 #" },
                            editor: function (container) {
                                var input = $('<input id="Location1" name="Location1" class="k-input numbers">');
                                input.appendTo(container);
                                input.kendoTextBox({
                                    min: 0,
                                    max: 100,
                                    spinners: false
                                });

                            },
                            width: 50
                        },
                        {
                            field: "Location2",
                            title: "Location2",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= Location2 #" },
                            editor: function (container) {
                                var input = $('<input id="Location2" name="Location2" class="k-input numbers">');
                                input.appendTo(container);
                                input.kendoTextBox({
                                    min: 0,
                                    max: 100,
                                    spinners: false
                                });

                            },
                            width: 50
                        },
                        ],
                        editable:true,
                        height: 300,
                        groupable: false,
                        sortable: true,
                        pageable: false,
                        scrollable: true
                    });

                    /* Logisticks END */
            </script>
        }
    </div>


    <script type="text/javascript">

        $("form").submit(function (event) {
            event.preventDefault();



            //var input;
            //var partTypeGrid = $("#ConditionPricegrid").data("kendoGrid");
            //var gridData = partTypeGrid.dataSource.view();
            //if (gridData.length > 0) {
            //    for (var i = 0; i < gridData.length; i++) {
            //        input = $("<input>", { type: 'hidden', name: 'ConditionPriceData(' + i + ').PartConditionPriceID', value: gridData[i].PartConditionPriceID })
            //        $(this).append($(input));

            //        input = $("<input>", { type: 'hidden', name: 'ConditionPriceData(' + i + ').PartID', value: gridData[i].PartID })
            //        $(this).append($(input));

            //        input = $("<input>", { type: 'hidden', name: 'ConditionPriceData(' + i + ').ConditionID', value: gridData[i].ConditionID })
            //        $(this).append($(input));

            //        input = $("<input>", { type: 'hidden', name: 'ConditionPriceData(' + i + ').Price', value: gridData[i].Price })
            //        $(this).append($(input));

            //        input = $("<input>", { type: 'hidden', name: 'ConditionPriceData(' + i + ').PriceQty', value: gridData[i].PriceQty })
            //        $(this).append($(input));


            //    }
            //}

            var _ConditionPriceGrid = $("#ConditionPriceGrid").data("kendoGrid");
            var _ConditionPriceGridKeyValues = buildSubmitValuesforGrid(_ConditionPriceGrid, "ConditionPriceTransData");
            $(this).append(_ConditionPriceGridKeyValues);


            var _RelatedPartTransGrid = $("#RelatedPartTransGrid").data("kendoGrid");
            var _RelatedPartTransGridKeyValues = buildSubmitValuesforGrid(_RelatedPartTransGrid, "RelatedPartTransData");
            $(this).append(_RelatedPartTransGridKeyValues);

            var _LogistickTransGrid = $("#LogistickTransGrid").data("kendoGrid");
            var _LogistickTransGridKeyValues = buildSubmitValuesforGrid(_LogistickTransGrid, "LogistickTransData");
            $(this).append(_LogistickTransGridKeyValues);

            var _CompabilityTransGrid = $("#CompabilityTransGrid").data("kendoGrid");
            var _CompabilityTransGridKeyValues = buildSubmitValuesforGrid(_CompabilityTransGrid, "CompabilityTransData");
            $(this).append(_CompabilityTransGridKeyValues);

            var _SupplierTransGrid = $("#SupplierTransGrid").data("kendoGrid");
            var _SupplierTransGridKeyValues = buildSubmitValuesforGrid(_SupplierTransGrid, "SupplierTransData");
            $(this).append(_SupplierTransGridKeyValues);


            $.post(this.action, $(this).serialize(), function (response) {

                if (response.saveStatus == "Success") {
                    ////Navigate to Main Page
                    //closeEstimateForm();
                }
                else {
                    //kendo.alert(response.estimateMessage);
                }
            }, 'json');
        })



        /// Alternet Part

        $('.AlternetDefaultValue').each(function () {
            var VarAlternetPartNo = this.value;
            $(this).focus(function () {
                if (this.value == VarAlternetPartNo) {
                    this.value = '';
                }
            });
            $(this).blur(function () {
                if (this.value == '') {
                    this.value = VarAlternetPartNo;
                }
            });
        });
        function AddAlternetPartNo() {
            $('#divAlternetPartNo').append($('#txtalternetpartNo').val() + ',');


        }


    </script>


    <script type="text/javascript">
    var compRecords = [];

    $(document).ready(function () {
        $.ajax({
            url: "@Url.Action("GetPartCompatibilities", "PartCompatibility")",
            data: { cPartID : 8 },
            type: "post",
            success: function (data) {
                compRecords = data;
            },
            async: false
        });

        $("#compWindow").kendoWindow({
            animation: {
                open: { effects: "fade:in" },
                close: { effects: "fade:out" }
            },
            width: "800",
            height: "460",
            title: "Manage Compatibility",
            actions: ["Close"],
            modal: true,
            resizable: false,
            visible: false,
            draggable: false,
            close: function (e) {
                var treeViewDS = buildTreeViewData(compRecords);
                var datasource = buildTreeViewDS(treeViewDS);
                datasource.read();
                var compTree = $("#treeview").data("kendoTreeView");
                compTree.setDataSource(datasource);
                compTree.expand(".k-item");
            }
        });

        var treeViewDS = buildTreeViewData(compRecords);
        var datasource = buildTreeViewDS(treeViewDS);
        datasource.read();

        $("#treeview").kendoTreeView({
            dataSource: datasource,
            dataTextField: ["Category", "MfrModels"]
        });
        var compTree = $("#treeview").data("kendoTreeView");
        compTree.expand(".k-item");
    })

    function buildTreeViewData(compRecords) {
        var catMfrRecords = [];
        var modelsForMfr;
        var mergedRecords = [];
        var treeViewDS = [];

        const uniqueCategories = new Set();
        for (var i = 0; i < compRecords.length; i++) {
            uniqueCategories.add(compRecords[i].ProductCategoryDescription);
        }

        for (let prodCat of uniqueCategories) {
            var categoryRecords = [];
            for (var r = 0; r < compRecords.length; r++) {
                if (compRecords[r].ProductCategoryDescription === prodCat) { categoryRecords.push(compRecords[r]); }
            }

            const uniqueMfrInCategory = new Set();
            for (var m = 0; m < categoryRecords.length; m++) { uniqueMfrInCategory.add(categoryRecords[m].VendorName) }

            var treeViewRecordForCategory = [];
            for (let mfr of uniqueMfrInCategory) {
                for (var r = 0; r < categoryRecords.length; r++) {
                    if (categoryRecords[r].VendorName === mfr) { catMfrRecords.push(categoryRecords[r]); }
                }

                modelsForMfr = mfr + ": "
                for (mfr = 0; mfr < catMfrRecords.length; mfr++) { modelsForMfr = modelsForMfr + catMfrRecords[mfr].ModelNo + ";" }

                treeViewRecordForCategory.push({ MfrModels: modelsForMfr });

               catMfrRecords = [];
            }

            treeViewDS.push({
                Category: prodCat,
                Manufacturer: treeViewRecordForCategory
            });
        }

        return treeViewDS;
    }

    function buildTreeViewDS(treeViewDS) {
        var datasource = new kendo.data.HierarchicalDataSource({
            data: treeViewDS,
            schema: {
                model: {
                    children: { // define options for second level
                        schema: {
                            data: "Manufacturer"
                            //model: {
                            //    children: "cast" // third level is defined by the field "cast"
                            //}
                        }
                    }
                }
            }
        });

        return datasource;
    }

    function launchCompWindow() {
        for (var i = 0; i < compRecords.length; i++) {
            compRecords[i].CreatedDate = kendo.toString(kendo.parseDate(compRecords[i].CreatedDate, 'yyyy-MM-dd'), 'MM/dd/yyyy');
        }
        var partCompWindow = $("#compWindow").data("kendoWindow");
        partCompWindow.refresh({
            url: "../PartCompatibility/LaunchCompatibilityWindow",
            //data: JSON.stringify({ cPartCompData: compRecords }),
            data: JSON.stringify(compRecords),
            contentType: "application/json",
            type: "post"
        });
        partCompWindow.center();
        partCompWindow.open();
    }

    function processDateFields(dataObject) {
        for (var field in dataObject) {
            if (dataObject.hasOwnProperty(field)) {
                var fieldVal = dataObject[field];
                if (fieldVal != null) {
                    if (typeof dataObject[field] == "string") {
                        if (fieldVal.indexOf('Date', 1) > 0) {
                            var dateString = fieldVal.substr(6);
                            dataObject[field] = new Date(parseInt(dateString));
                        }
                    }
                    else if (typeof dataObject[field] == "object") {
                        var subObj = dataObject[field];
                        for (var l = 0; l < subObj.length; l++) {
                            processDateFields(subObj[l]);
                        }
                    }
                }
            }
        }

        return dataObject;
    }
    </script>


    @*Supplier*@ 
    <script type="text/javascript">
        var SupplierRecords = [];

    $(document).ready(function () {
        $.ajax({
            url: "@Url.Action("PartSupplierTransList", "SupplierTrans")",
            data: { cPartID : 8 },
            type: "post",
            success: function (data) {
                compRecords = data;
            },
            async: false
        });

        $("#SupplierWindow").kendoWindow({
            animation: {
                open: { effects: "fade:in" },
                close: { effects: "fade:out" }
            },
            width: "800",
            height: "460",
            title: "Supplier",
            actions: ["Close"],
            modal: true,
            resizable: false,
            visible: false,
            draggable: false,
            close: function (e) {
             // var treeViewDS = buildTreeViewData(compRecords);
             ///   var datasource = buildTreeViewDS(treeViewDS);
                compRecords.read();
             //   var compTree = $("#treeview").data("kendoTreeView");
            //    compTree.setDataSource(datasource);
             //   compTree.expand(".k-item");
            }
        });

       // var treeViewDS = buildTreeViewData(compRecords);
        var datasource = compRecords;
       // datasource.read();

       
       
    })
         

    

        function launchSupplierWindow() {
        for (var i = 0; i < compRecords.length; i++) {
            compRecords[i].CreatedDate = kendo.toString(kendo.parseDate(compRecords[i].CreatedDate, 'yyyy-MM-dd'), 'MM/dd/yyyy');
        }
        var partSupplierWindow = $("#SupplierWindow").data("kendoWindow");
        partSupplierWindow.refresh({
            url: "../SupplierTrans/LaunchSupplierWindow",
            data: JSON.stringify(partSupplierWindow),
            contentType: "application/json",
            type: "post"
        });
        partCompWindow.center();
        partCompWindow.open();
    }

    function processDateFields(dataObject) {
        for (var field in dataObject) {
            if (dataObject.hasOwnProperty(field)) {
                var fieldVal = dataObject[field];
                if (fieldVal != null) {
                    if (typeof dataObject[field] == "string") {
                        if (fieldVal.indexOf('Date', 1) > 0) {
                            var dateString = fieldVal.substr(6);
                            dataObject[field] = new Date(parseInt(dateString));
                        }
                    }
                    else if (typeof dataObject[field] == "object") {
                        var subObj = dataObject[field];
                        for (var l = 0; l < subObj.length; l++) {
                            processDateFields(subObj[l]);
                        }
                    }
                }
            }
        }

        return dataObject;
    }
    </script>
</body>


