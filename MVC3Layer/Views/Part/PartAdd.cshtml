@model BusinessObject.PartBO

@{
    ViewBag.Title = "Index";
    Layout = "";
}

<link rel="stylesheet" href="~/Content/kendo/kendo.common.min.css" />
<link rel="stylesheet" href="~/Content/kendo/kendo.default.min.css" />
<link rel="stylesheet" href="~/Content/kendo/kendo.default.mobile.min.css" />
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/kendo/kendo.all.min.js"></script>
<script src="~/Scripts/kendo/kendo.aspnetmvc.min.js"></script>


<style type="text/css">
    .container {
        width: 100%;
        height: auto;
        background-color: #f8f9f8;
        margin-right: auto;
        margin-left: auto;
        color: #039;
    }

    body {
        font-family: Verdana, Geneva, sans-serif;
        font-size: 12px;
        font-size: 12px;
    }
</style>

<body>

    <div>
        @using (Html.BeginForm("PartAdd", "Part", FormMethod.Post))
        {

            @Html.AntiForgeryToken()

            <div class="container">

                <table class="table">
                    <tr>
                        <td style="width:20%;vertical-align:top">

                            <div>
                                <div class="col-md-12">
                                    <div class="card">
                                        <div class="card-body" style="text-align:center;">
                                            <img src=@ViewBag.Photo id="displayPhoto" class="imageDisplay img-thumbnail" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    @(Html.Kendo().Upload()
                                .Name("Photo")
                                .HtmlAttributes(new { aria_label = "files", @style = "width:300px;" })
                                .Validation(validation =>
                                {
                                    validation.AllowedExtensions(new string[] { ".jpg", ".jpeg", ".png", ".bmp", ".gif" });
                                    validation.MaxFileSize(500000);
                                })
                                .Messages(m => m.Select("Select Image"))
                                .Multiple(false)
                                 .Events(events => events
                                 .Select("onSelect")
                                 .Remove("onRemove")
                                 )
                                    )
                                </div>
                                <div class="col-md-12" style="margin-top:5px;">
                                    <button type="submit" class="btn btn-success w-100">Save</button>
                                </div>

                            </div>
                        </td>
                        <td style="width: 40%; vertical-align: top">
                            <div class="form-group">
                                <label for="exampleFormControlFile1">PartNo</label>
                                @(Html.Kendo().TextBoxFor(model => model.PartNo)
             .Name("PartNo")
             .HtmlAttributes(new { placeholder = "Part No", required = "required", validationmessage = "Enter Part No" })
                                )
                            </div>

                            <div class="form-group">

                                <label for="exampleFormControlFile1">Type</label>
                                @(Html.Kendo().DropDownList().Name("ddlPartTypeID")
                            .HtmlAttributes(new { style = "width:100%" })
                            .OptionLabel("Select Type")

                            .BindTo(new SelectList((List<BusinessObject.PartTypeBO>)ViewBag.lstPartType, "PartTypeID", "PartTypeDescription"))

                                )

                            </div>

                            <div class="form-group">

                                <label for="exampleFormControlFile1">Sub Type</label>


                                @Html.Kendo().DropDownList().Name("ddlSubType").OptionLabel("--Select--").DataTextField("SubTypeDescription").DataValueField("SubTypeID").DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetAllSubPartType", "Part").Data("FilterSubType");

                                    }).ServerFiltering(true);
                                }).Enable(false).AutoBind(false).CascadeFrom("ddlPartTypeID")







                                @(Html.Kendo().DropDownList()
                              .Name("ddlSubType")
                              .HtmlAttributes(new { style = "width:100%" })
                              .OptionLabel("Select Sub Type")
                              .DataTextField("SubTypeDescription")
                              .DataValueField("SubTypeID")
                                  .DataSource(source =>
                                  {
                                      source.Read(read =>
                                      {
                                          read.Action("GetAllSubPartType", "ddlType")
                                              .Data("FilterSubType");
                                      })
                                      .ServerFiltering(true);
                                  })
                                  .Enable(false)
                                  .AutoBind(false)
                                  .CascadeFrom("ddlType")
                                )
                            </div>
                            <div class="form-group">
                                <label for="exampleFormControlFile1">Part Desc</label>
                                @(Html.Kendo().TextBoxFor(model => model.PartDescription)
             .Name("PartDescription")
             .HtmlAttributes(new { placeholder = "Part Type Description", required = "required", validationmessage = "Enter Part Type Description" })
                                )
                            </div>

                            <div class="form-group">
                                <label for="exampleFormControlFile1">Part Detail Desc</label>
                                @(Html.Kendo().TextBoxFor(model => model.PartDetailDescription)
             .Name("PartDetailDescription")
             .HtmlAttributes(new { placeholder = "Part Detail Description", required = "required", validationmessage = "Enter Part Detail Description" })
                                )
                            </div>

                            <div class="form-group">
                                <label for="exampleFormControlFile1">Height</label>
                                @(Html.Kendo().NumericTextBoxFor(model => model.Dim_H)

             .Name("Dim_H")
             .HtmlAttributes(new { placeholder = "Height", required = "required", validationmessage = "Enter Height" })
                                )
                            </div>
                            <div class="form-group">
                                <label for="exampleFormControlFile1">Weight</label>
                                @(Html.Kendo().NumericTextBoxFor(model => model.Dim_W)
             .Name("Dim_W")
             .HtmlAttributes(new { placeholder = "Weight", required = "required", validationmessage = "Enter Weight" })
                                )
                            </div>

                            <div class="form-group">
                                <label for="exampleFormControlFile1">Lenght</label>
                                @(Html.Kendo().NumericTextBoxFor(model => model.Dim_L)
             .Name("Dim_L")
             .HtmlAttributes(new { placeholder = "Lenght", required = "required", validationmessage = "Enter Lenght" })
                                )
                            </div>

                            <div class="form-group">
                                <label for="exampleFormControlFile1">Gross Weight</label>
                                @(Html.Kendo().TextAreaFor(model => model.GrossWeight)
             .Name("GrossWeight")
             .HtmlAttributes(new { placeholder = "Gross Weight", required = "required", validationmessage = "Enter Gross Weight" })
                                )
                            </div>


                            <div class="form-group">
                                <label for="exampleFormControlFile1">Online Message</label>
                                @(Html.Kendo().TextBoxFor(model => model.OnlineMsg)
             .Name("OnlineMsg")
             .HtmlAttributes(new { placeholder = "Online Message", validationmessage = "Enter Online Message" })
                                )
                            </div>
                            <div class="form-group">
                                <label for="exampleFormControlFile1">Note</label>
                                @(Html.Kendo().TextBoxFor(model => model.Note)
             .Name("Note")
             .HtmlAttributes(new { placeholder = "Note", validationmessage = "Enter Note" })
                                )
                            </div>

                            <div class="form-group">
                                <label for="exampleFormControlFile1">Publish</label>
                                @(Html.Kendo().CheckBoxFor(model => model.Publish)
             .Name("Publish")
             .HtmlAttributes(new { placeholder = "Publish", validationmessage = "Enter Publish" })
                                )
                            </div>


                            Condition Price
                            <div id="ConditionPricegrid" style="width: 100%;height:300px"></div>


                            Related Parts
                            <div id="RelatedPartTransgrid" style="width: 100%;height:300px"></div>

                            Logistick Parts
                            <div id="LogistickTransgrid" style="width: 100%;height:300px"></div>



                            @*@(Html.Kendo().Button()
                                .Name("primaryTextButton")
                                .ThemeColor(ThemeColor.Primary)
                                .Content("Primary Button"))*@
                            <input type="submit" value="Save" CssClass="btn btn-primary btn-sm" />

                        </td>
                        <td style="width: 40%; vertical-align: top">

                            Compatibility
                            <div id="Compatibilitygrid" style="width: 80%;height:300px"></div>

                            Supplier
                            <div id="SupplierTransgrid" style="width: 80%;height:300px"></div>

                            gridC
                            <div id="gridc" style="width: 80%;height:300px"></div>

                        </td>
                    </tr>
                </table>
            </div>

            <script>

                    function FilterSubType() {
                        return {
                            PartTypeID: $("#ddlPartTypeID").val()
                        };
                    }

                    /* image preview*/


                    function onRemove(e) {
                        $("#displayPhoto").attr("src", "/images/profile_default.png");
                    }

                    function onSelect(e) {
                        var file = e.files[0].rawFile;
                        var ext = e.files[0].extension.toLowerCase();

                        if (ext == ".jpg" || ext == ".jpeg" || ext == ".png" || ext == ".bmp" || ext == ".gif") {
                            var reader = new FileReader();
                            reader.onloadend = function () {
                                $("#displayPhoto").attr("src", this.result); //img id where the photo is to be displayed
                            };

                            reader.readAsDataURL(file); //Read the selected photo and display in UI
                        }
                        else { //If file extension does not belong to photo display a default image
                            $("#displayPhoto").attr("src", "/images/profile_default.png");
                        }
                    }



                    /* Compatibilitygrid start */

                    var CompatibilitygridDS = @Html.Raw(Json.Encode((IEnumerable<BusinessObject.CompatibilityTrans>)ViewBag.lstCompatibilityPart));



                    var dataSource = new kendo.data.DataSource({
                        schema: {
                            model: {
                                id: "PartID",
                                fields: {
                                    PartID: { type: "number" },
                                    ProductCategoryDescription: { type: "string" },
                                    VendorName: { type: "string" },
                                    ModelNo: { type: "string" },
                                    Active: { type: "boolean" }

                                }
                            }
                        },
                        transport: {
                            read: function (options) { options.success(CompatibilitygridDS); },
                            update: function(options) { options.success(); },
                            create: function(options) {
                                CompatibilitygridDS.push(options.data);
                                options.success(options.data);
                            },
                            destroy: function(options) {
                                CompatibilitygridDS.splice(options.data.RowID - 1, 1);
                                options.success(options.data);
                            }
                        },
                        requestEnd: function (e) {
                            if (e.type == "create" || e.type == "update" || e.type == "delete") {
                                this.read();
                            }
                            else if (e.type == "read") {
                            }
                        },
                        error: function (obj) {
                            alert("Status: " + obj.status + "; Error Message: " + obj.errorThrown);
                        }
                    });

                    $("#Compatibilitygrid").kendoGrid({
                        dataSource: dataSource,

                        columns: [
                        {
                            field: "Active",
                            title: "Status",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },
                            template: '<input type="checkbox" #= Active ? "checked=checked" : "" # class="SelFlagChkBox" ></input>',
                            width: 30
                        },
                        {
                            field: "ProductCategoryDescription",
                            title: "Product Category Description",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },

                        },
                        {
                            field: "VendorName",
                            title: "VendorName",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },

                        },
                        {
                            field: "ModelNo",
                            title: "ModelNo",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },

                        },
                        ],
                        editable: {
                            mode: "inline",
                            confirmation: "Are you sure you want to Delete the Part Type?",
                            cancelDelete: "No",
                            confirmDelete: "Yes"
                        },
                        height: 450,
                        groupable: false,
                        sortable: true,
                        pageable: false,
                        scrollable: true
                    });







                    /* Compatibilitygrid END */



                    /* SupplierTransgrid start */

                    var SupplierTransgridDS = @Html.Raw(Json.Encode(ViewBag.lstSupplierTrans));

                    var dataSource = new kendo.data.DataSource({
                        schema: {
                            model: {
                                id: "PartID",
                                fields: {
                                    PartID: { type: "number" },
                                    SuppierName: { type: "string" }


                                }
                            }
                        },
                        transport: {
                            read: function (options) { options.success(SupplierTransgridDS); },
                            update: function(options) { options.success(); },
                            create: function(options) {
                                SupplierTransgridDS.push(options.data);
                                options.success(options.data);
                            },
                            destroy: function(options) {
                                SupplierTransgridDS.splice(options.data.RowID - 1, 1);
                                options.success(options.data);
                            }
                        },
                        requestEnd: function (e) {
                            if (e.type == "create" || e.type == "update" || e.type == "delete") {
                                this.read();
                            }
                            else if (e.type == "read") {
                            }
                        },
                        error: function (obj) {
                            alert("Status: " + obj.status + "; Error Message: " + obj.errorThrown);
                        }
                    });

                    $("#SupplierTransgrid").kendoGrid({
                        dataSource: dataSource,

                        columns: [
                        {
                            field: "PartID",
                            hidden: false,
                            width: 20
                        },
                        {
                            field: "SuppierName",
                            title: "Suppier Name",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },

                        } ,
                        ],
                        editable: {
                            mode: "inline",
                            confirmation: "Are you sure you want to Delete the Part Type?",
                            cancelDelete: "No",
                            confirmDelete: "Yes"
                        },
                        height: 450,
                        groupable: false,
                        sortable: true,
                        pageable: false,
                        scrollable: true
                    });

                    /* SupplierTransgrid END */


                    /* ConditionPriceTrans start */

                    var ConditionPriceTransgridDS = @Html.Raw(Json.Encode(ViewBag.lstConditionPriceTrans));

                    var dataSource = new kendo.data.DataSource({
                        schema: {
                            model: {
                                id: "PartID",
                                fields: {
                                    PartConditionPriceID: { type: "number" },
                                    PartID: { type: "number" },
                                    ConditionID: { type: "number" },
                                    ConditionDescription: { type: "string",editable:false},
                                    Stockable: { type: "boolean" },
                                    Retunable: { type: "boolean" },
                                    PriceQty: { type: "number" },
                                    Price: { type: "number" },
                                    Location: { type: "string" },
                                    lastupdatedDate: { type: "date" }

                                }
                            }
                        },
                        transport: {
                            read: function (options) { options.success(ConditionPriceTransgridDS); },
                            update: function(options) { options.success(); },
                            create: function(options) {
                                ConditionPriceTransgridDS.push(options.data);
                                options.success(options.data);
                            },
                            destroy: function(options) {
                                ConditionPriceTransgridDS.splice(options.data.RowID - 1, 1);
                                options.success(options.data);
                            }
                        },
                        requestEnd: function (e) {
                            if (e.type == "create" || e.type == "update" || e.type == "delete") {
                                this.read();
                            }
                            else if (e.type == "read") {
                            }
                        },
                        error: function (obj) {
                            alert("Status: " + obj.status + "; Error Message: " + obj.errorThrown);
                        }
                    });

                    $("#ConditionPricegrid").kendoGrid({
                        dataSource: dataSource,

                        columns: [
                               {
                                 field: "PartConditionPriceID",
                                 hidden: true,
                                 width: 10
                             },
                               {
                                   field: "PartID",
                                   hidden: true,
                                   width: 10
                               },
                               {
                                   field: "ConditionID",
                                   hidden: true,
                                   width: 10
                               },
                               {
                               field: "ConditionDescription",
                               title: "Desc",
                               headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                               attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= ConditionDescription #" },
                               width: 50
                           },
                               {
                                field: "Stockable",
                                title: "Stockable",

                                attributes: { style: "font-size: 12px;" },
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },

                                template: '<input type="checkbox" #= Stockable ? "checked=checked" : "" # ></input>',
                                width: 30
                            },

                               {
                                field: "Retunable",
                                title: "Retunable",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },
                                template: '<input type="checkbox" #= Retunable ? "checked=checked" : "" #  ></input>',
                                width: 30

                            },

                               {
                                field: "PriceQty",
                                title: "PriceQty",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },

                                editor: function (container) {
                                    var input = $('<input id="PriceQty" name="PriceQty" class="k-input numbers">');
                                    input.appendTo(container);
                                    input.kendoNumericTextBox({
                                        format: "{0:n0}",
                                        decimals: 0,
                                        min: 0,
                                        max: 100,
                                        spinners: false
                                    });

                                },
                                width: 50
                            },
                               {
                                field: "Price",
                                title: "Price",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px; text-align:right" },

                                format: "{0:c2}",
                                editor: function (container) {
                                    var input = $('<input id="PriceQty" name="Price" class="k-input numbers" style="text-align:right;">');
                                    input.appendTo(container);
                                    input.kendoNumericTextBox({
                                        format: "{0:c2}",

                                        min: 0,

                                        spinners: false
                                    });

                                },
                                width: 50
                            },

                               {
                                field: "Location",
                                title: "Location",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },
                                width: 20
                            },
                               {
                                field: "lastupdatedDate",
                                title: "lastupdatedDate",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "font-size: 12px;" },
                                template: function (dataItem) {
                                    if (dataItem.lastupdatedDate != null) {
                                        return kendo.toString(kendo.parseDate(dataItem.lastupdatedDate, 'yyyy-MM-dd'), 'MM/dd/yyyy');
                                    }
                                    else {
                                        return "";
                                    }
                                },

                                width: 50

                            },


                        ],
                        editable:true,
                        //editable: {
                        //    mode: "inline",
                        //    confirmation: "Are you sure you want to Delete the Part Type?",
                        //    cancelDelete: "No",
                        //    confirmDelete: "Yes"
                        //},
                        height: 450,
                        groupable: false,
                        sortable: true,
                        pageable: false,
                        scrollable: true
                    });

                    /* ConditionPriceTrans END */


                     /* Related part trans start */

                    var RelatedPartTransgridDS = @Html.Raw(Json.Encode(ViewBag.lstRelatedPartTrans));

                    var dataSource = new kendo.data.DataSource({
                        schema: {
                            model: {
                                id: "PartID",
                                fields: {
                                    PartNo: { type: "string" },
                                    PartDescription: { type: "string" },
                                    PartTypeDescription: { type: "string" },
                                    SubTypeDescription: { type: "string"}
                                }
                            }
                        },
                        transport: {
                            read: function (options) { options.success(RelatedPartTransgridDS); },
                            update: function(options) { options.success(); },
                            create: function(options) {
                                RelatedPartTransgridDS.push(options.data);
                                options.success(options.data);
                            },
                            destroy: function(options) {
                                RelatedPartTransgridDS.splice(options.data.RowID - 1, 1);
                                options.success(options.data);
                            }
                        },
                        requestEnd: function (e) {
                            if (e.type == "create" || e.type == "update" || e.type == "delete") {
                                this.read();
                            }
                            else if (e.type == "read") {
                            }
                        },
                        error: function (obj) {
                            alert("Status: " + obj.status + "; Error Message: " + obj.errorThrown);
                        }
                    });
                $("#RelatedPartTransgrid").kendoGrid({
                        dataSource: dataSource,
                        columns: [
                               {
                                field: "PartNo",
                                title: "PartNo",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= PartNo #" },
                                width: 50
                             },
                               {
                                   field: "PartDescription",
                                   title: "PartDescription",
                                   headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                   attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= PartDescription #" },
                                   width: 50
                               },
                               {
                                   field: "PartTypeDescription",
                                   title: "PartTypeDescription",
                                   headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                   attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= PartTypeDescription #" },
                                   width: 50
                               },

                        ],
                        editable:false,
                        height: 450,
                        groupable: false,
                        sortable: true,
                        pageable: false,
                        scrollable: true
                    });

                /* Related part trans END */






                  /* Logisticks trans start */


                    var LogistickTransgridDS = @Html.Raw(Json.Encode(ViewBag.lstlogisticksTrans));

                    var dataSource = new kendo.data.DataSource({
                        schema: {
                            model: {
                                id: "PartID",
                                fields: {
                                    chk: { type: "boolean" },
                                    PartLogisticsID: { type: "number" },
                                    PartID: { type: "number" },
                                    ConditionID: { type: "number" },
                                    ConditionDescription: { type: "string" },
                                    SafetyStock: { type: "string" },
                                    MinBuy: { type: "string" },
                                    Location2: { type: "string" },
                                    Stockable: { type: "boolean" },
                                    Retunable: { type: "boolean" }
                                }
                            }
                        },
                        transport: {
                            read: function (options) { options.success(LogistickTransgridDS); },
                            update: function(options) { options.success(); },
                            create: function(options) {
                                LogistickTransgridDS.push(options.data);
                                options.success(options.data);
                            },
                            destroy: function(options) {
                                LogistickTransgridDS.splice(options.data.RowID - 1, 1);
                                options.success(options.data);
                            }
                        },
                        requestEnd: function (e) {
                            if (e.type == "create" || e.type == "update" || e.type == "delete") {
                                this.read();
                            }
                            else if (e.type == "read") {
                            }
                        },
                        error: function (obj) {
                            alert("Status: " + obj.status + "; Error Message: " + obj.errorThrown);
                        }
                    });
                $("#LogistickTransgrid").kendoGrid({
                        dataSource: dataSource,
                    columns: [

                         
                        {
                                   field: "ConditionDescription",
                                   title: "ConditionDescription",
                                headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                                   attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= ConditionDescription #" },
                                width: 50
                             },
                        {
                                   field: "SafetyStock",
                                   title: "SafetyStock",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },
                            template: '<input type="checkbox" #= Stockable ? "checked=checked" : "" # class="SelFlagChkBox" ></input>',
                            width: 30
                               },
                        {
                                   field: "MinBuy",
                                   title: "MinBuy",
                                   headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= MinBuy #" },
                                   width: 50
                        },
                        {
                            field: "Location2",
                            title: "Location2",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "text-align: left; white-space: nowrap; text-overflow: ellipsis;", title: "#= Location2 #" },
                            width: 50
                        },
                        {
                            field: "Stockable",
                            title: "Stockable",
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },
                            template: '<input type="checkbox" #= Stockable ? "checked=checked" : "" # class="SelFlagChkBox" ></input>',
                            width: 30
                        },
                        {
                            field: "Retunable",
                            title: "Retunable",                             
                            headerAttributes: { "class": "table-header-cell", style: "font-size: 12px;" },
                            attributes: { style: "font-size: 12px;" },
                            template: '<input type="checkbox" #= Retunable ? "checked=checked" : "" # class="SelFlagChkBox" ></input>',
                            width: 30

                        }, 
                        ],
                        editable:false,
                        height: 450,
                        groupable: false,
                        sortable: true,
                        pageable: false,
                        scrollable: true
                    });

                    /* Logisticks END */
            </script>
        }
    </div>


    <script type="text/javascript">

        $("form").submit(function (event) {
            event.preventDefault();



            var input;
            var partTypeGrid = $("#ConditionPricegrid").data("kendoGrid");
            var gridData = partTypeGrid.dataSource.view();
            if (gridData.length > 0) {
                for (var i = 0; i < gridData.length; i++) {
                    input = $("<input>", { type: 'hidden', name: 'ConditionPriceData(' + i + ').PartConditionPriceID', value: gridData[i].PartConditionPriceID })
                    $(this).append($(input));

                    input = $("<input>", { type: 'hidden', name: 'ConditionPriceData(' + i + ').PartID', value: gridData[i].PartID })
                    $(this).append($(input));

                    input = $("<input>", { type: 'hidden', name: 'ConditionPriceData(' + i + ').ConditionID', value: gridData[i].ConditionID })
                    $(this).append($(input));

                    input = $("<input>", { type: 'hidden', name: 'ConditionPriceData(' + i + ').Price', value: gridData[i].Price })
                    $(this).append($(input));

                    input = $("<input>", { type: 'hidden', name: 'ConditionPriceData(' + i + ').PriceQty', value: gridData[i].PriceQty })
                    $(this).append($(input));


                }
            }


            $.post(this.action, $(this).serialize(), function (response) {

                if (response.saveStatus == "Success") {
                    ////Navigate to Main Page
                    //closeEstimateForm();
                }
                else {
                    //kendo.alert(response.estimateMessage);
                }
            }, 'json');
        })
    </script>
</body>